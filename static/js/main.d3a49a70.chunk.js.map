{"version":3,"sources":["Components/Task.js","Components/SortableTask.js","Components/ButtonAdd.js","Components/ColorPicker.js","Components/LabelPicker.js","Components/TasksCategorie.js","Components/TaskCategoriesContainer.js","Components/FilterType.js","Components/SideBar.js","App.js","index.js"],"names":["Task","forwardRef","ref","taskData","onDelete","onEdit","attributes","listeners","style","useState","text","value","setValue","className","onClick","done","color","textDecorationLine","onChange","e","target","onBlur","onKeyDown","code","blur","handleKeyDown","stopPropagation","id","console","log","SortableTask","props","useSortable","setNodeRef","transform","transition","CSS","Transform","toString","isDragged","background","ButtonAdd","onAdd","isEdit","setIsEdit","input","focus","placeholder","ColorPicker","tasksCategorie","onClose","wrapper","colors","reactDom","createPortal","left","getBoundingClientRect","top","element","tabIndex","hasAttribute","colorId","parseInt","dataset","handleEdit","map","title","name","document","body","LabelPicker","labels","position","labelId","label","TasksCategorie","tasksData","tasks","setTasks","isColorPicker","setisColorPicker","isLabelPicker","setisLabelPicker","setName","nameBackup","useRef","categoryWrapper","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","Translate","a","postTask","tasksCategorieId","data","task","fetch","method","headers","JSON","stringify","res","json","putTask","x","deleteTask","status","filter","saveEdit","length","alert","cancelEdit","current","handleDragStart","event","active","handleDragEnd","over","oldIndex","findIndex","newIndex","arrayMove","find","height","width","collisionDetection","closestCenter","onDragEnd","onDragStart","items","strategy","verticalListSortingStrategy","labelName","TaskCategoriesContainer","filterState","tasksCategories","setTasksCategories","newCategorie","type","deleteCategory","categorie","editCategory","FilteredCategories","size","FilterType","children","setFilterState","toUpperCase","undefined","filterCategories","SideBar","setLabels","resData","marginBottom","deleteLabel","closest","App","setData","fetchData","dbData","useEffect","getData","dataFromServer","Object","keys","margin","ReactDOM","render","StrictMode","getElementById","onload"],"mappings":"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","file":"static/js/main.d3a49a70.chunk.js","sourcesContent":["import { forwardRef, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\"\r\nimport { GrDrag } from \"react-icons/gr\"\r\nimport { BsCheck } from \"react-icons/bs\"\r\n\r\n\r\nconst Task = forwardRef(({taskData, onDelete, onEdit, attributes, listeners, style}, ref) => {\r\n    const [value, setValue] = useState(taskData.text);\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.code === \"Enter\" || e.code === \"Escape\") {\r\n            e.target.blur();\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className=\"taskContainer\" ref={ref} style={style}>\r\n            <GrDrag className=\"dragHandle\" {...listeners} {...attributes}></GrDrag>\r\n            <div \r\n                className=\"checkbox\" \r\n                onClick={() => onEdit({...taskData, done: !taskData.done})} \r\n            >\r\n                { taskData.done && <BsCheck style={{color: \"red\"}}/>}\r\n            </div>\r\n            <input \r\n                className=\"task\" \r\n                style={taskData.done ? {textDecorationLine: 'line-through', color: \"grey\"} : null}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={() => onEdit({...taskData, text: value})}\r\n                onKeyDown={(e) => handleKeyDown(e)}\r\n            >\r\n            </input>\r\n            <FaTimes \r\n                className=\"del-icon\" \r\n                onClick={(e) => {e.stopPropagation(); onDelete(taskData.id); console.log(\"deleteTask\");}}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Task","import React from 'react'\r\nimport Task from './Task';\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\nconst SortableTask = (props) => {\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: props.taskData.id});\r\n      \r\n      const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n\r\n    return (\r\n        <Task \r\n            ref={setNodeRef} \r\n            {...props} \r\n            style={props.isDragged ? {...style, background: \"lightgrey\"} : style} \r\n            attributes={attributes} \r\n            listeners={listeners}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SortableTask","import { useState } from \"react\";\r\nimport { TiPlus } from \"react-icons/ti\"\r\n\r\n\r\nconst ButtonAdd = ({ onAdd, text, style }) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    function onClick() {\r\n        onAdd(value);\r\n        setValue(\"\");\r\n        setIsEdit(false);\r\n    }\r\n\r\n    function drawEdit() {\r\n        return(\r\n            <div>\r\n                <input \r\n                    ref={input => input && input.focus()} \r\n                    onKeyDown={(e) => handleKeyDown(e)} \r\n                    onChange={(e) => {setValue(e.target.value)}} \r\n                    value={value}\r\n                    placeholder={text}\r\n                ></input>\r\n                <div>\r\n                    <button className=\"save-btn\" onClick={onClick}>Save</button>\r\n                    <button onClick={() => setIsEdit(false)}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function drawButton() {\r\n        return ( \r\n            <div className=\"add-btn\" style={style} onClick={() => setIsEdit(true)}>\r\n                <TiPlus /><span>{text}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.code===\"Enter\") {\r\n            onClick();\r\n            setIsEdit(false);\r\n        }\r\n        else if (e.code===\"Escape\") {\r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>{!isEdit ? drawButton() : drawEdit() }</>\r\n    )\r\n}\r\n\r\nexport default ButtonAdd","import React from 'react'\r\nimport reactDom from 'react-dom';\r\n\r\nconst ColorPicker = ({tasksCategorie, onEdit, onClose, wrapper, colors}) => {\r\n    function handleEdit(e) {\r\n        e.stopPropagation();\r\n        if (!e.target.hasAttribute(\"title\")) return;\r\n        \r\n        onEdit({...tasksCategorie, colorId: parseInt(e.target.dataset.id)});\r\n        onClose(false);\r\n    }\r\n\r\n    return reactDom.createPortal((\r\n        <div className=\"colorPicker\" \r\n            style={{left: (wrapper.getBoundingClientRect().left + \"px\"), top: wrapper.getBoundingClientRect().top + 20 + \"px\"}}\r\n            ref={element => element && element.focus()} \r\n            tabIndex=\"0\" \r\n            onClick={(e) => handleEdit(e)}\r\n            onBlur={() => onClose(false)}\r\n        >\r\n            {colors.map(color => (\r\n                <div key={`color-${color.id}`} title={color.name} data-id={color.id} style={{background: `var(--${color.name})`}}></div>\r\n            ))}\r\n        </div>\r\n    ), document.body)\r\n}\r\n\r\nexport default ColorPicker","import React from 'react'\r\n\r\nconst LabelPicker = ({labels, onClose, onEdit, tasksCategorie}) => {\r\n    function handleEdit(e) {\r\n        e.stopPropagation();\r\n        var labelId = e.target.dataset.id;\r\n        if (labelId == null) labelId = false;\r\n        else labelId = parseInt(e.target.dataset.id);\r\n        onEdit({...tasksCategorie, labelId});\r\n        onClose(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"labelPicker\" \r\n            style={{position: \"relative\"}}\r\n            ref={element => element && element.focus()} \r\n            tabIndex=\"0\" \r\n            onClick={(e) => handleEdit(e)}\r\n            onBlur={() => onClose(false)}\r\n        >\r\n            <div>none</div>\r\n            {labels.map(label => (\r\n                <div key={`label-${label.id}`} data-id={label.id}>{label.name}</div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LabelPicker","import { useState, useRef } from 'react';\r\nimport { GrDrag } from \"react-icons/gr\";\r\nimport { HiColorSwatch } from  \"react-icons/hi\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { MdLabel } from \"react-icons/md\"\r\nimport SortableTask from './SortableTask';\r\n\r\nimport ButtonAdd from './ButtonAdd';\r\nimport Task from './Task';\r\nimport ColorPicker from './ColorPicker';\r\nimport LabelPicker from './LabelPicker';\r\n\r\n\r\n// Sortable\r\nimport {\r\n    DragOverlay,\r\n    closestCenter,\r\n    DndContext, \r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n  } from '@dnd-kit/core';\r\n  import {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n    verticalListSortingStrategy,\r\n    useSortable\r\n  } from '@dnd-kit/sortable';\r\n  import { CSS } from '@dnd-kit/utilities';\r\n\r\n  \r\nconst TasksCategorie = ({tasksCategorie, tasksData, onDelete, onEdit, colors, labels}) => {\r\n    const [tasks, setTasks] = useState(tasksData);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isColorPicker, setisColorPicker] = useState(false);\r\n    const [isLabelPicker, setisLabelPicker] = useState(false);\r\n    const [name, setName] = useState(tasksCategorie.name);\r\n    const nameBackup = useRef();\r\n    const categoryWrapper = useRef();\r\n\r\n    const [activeId, setActiveId] = useState(null);\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n          coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n      );\r\n\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: tasksCategorie.id});\r\n      \r\n    const style = {\r\n        transform: CSS.Translate.toString(transform),\r\n        transition,\r\n    };\r\n\r\n\r\n\r\n\r\n    async function addTask(text) {\r\n        var data = await postTask({tasksCategorieId: tasksCategorie.id, done: false, text});\r\n        setTasks([...tasks, data]);\r\n    }\r\n\r\n    async function postTask(task) {\r\n        var res =  await fetch(`http://localhost:5000/tasks`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(\r\n                task\r\n            ),\r\n        });\r\n        var data = await res.json();\r\n        console.log(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    async function putTask(task) {\r\n        var res =  await fetch(`http://localhost:5000/tasks/${task.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n            body: JSON.stringify(task),\r\n        });\r\n        var data = await res.json();\r\n    \r\n        setTasks(tasks.map(x => x.id === task.id ? data : x));\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        var res = await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'});\r\n        if (res.status === 200) setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n\r\n\r\n    // Edit\r\n    function drawCategoryEdit() {\r\n        return(\r\n            <div>\r\n                <input \r\n                    ref={input => input && input.focus()} \r\n                    placeholder=\"New Category\" \r\n                    onKeyDown={e => handleKeyDown(e)} \r\n                    onChange={(e) => setName(e.target.value)} \r\n                    value={name} \r\n                    style={{height: \"1.5em\", width: \"96%\"}}\r\n                />\r\n                <div className=\"btnContainer\">\r\n                    <button \r\n                        className=\"save-btn\"\r\n                        onClick={saveEdit}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button onClick={cancelEdit}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.code===\"Enter\") {\r\n            onEdit({...tasksCategorie, name}); \r\n            setIsEdit(false);\r\n        }\r\n        else if (e.code===\"Escape\") {\r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    function saveEdit() {\r\n        if (name.length === 0) {\r\n            alert(\"Enter a Name!\");\r\n        } else {\r\n            onEdit({...tasksCategorie, name}); \r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (name.length === 0) {\r\n            alert(\"Enter a Name!\");\r\n        } else {\r\n            setIsEdit(false);\r\n            setName(nameBackup.current);\r\n        }\r\n    }\r\n\r\n    function labelName() {\r\n        const label = labels.find(label => label.id === tasksCategorie.labelId);\r\n        if (label != null) {\r\n            return label.name;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n    // Sortable\r\n\r\n    function handleDragStart(event) {            \r\n        setActiveId(event.active.id);  \r\n    }\r\n\r\n    function handleDragEnd(event) {\r\n        const {active, over} = event;\r\n    \r\n        if (active.id !== over.id) {\r\n            const oldIndex = tasks.findIndex(x => x.id === active.id);\r\n            const newIndex = tasks.findIndex(x => x.id === over.id);\r\n            setTasks(arrayMove(tasks, oldIndex, newIndex));\r\n        }\r\n        setActiveId(null);\r\n    }\r\n\r\n    const drawTasks = () => {\r\n        return  (\r\n        <DndContext \r\n            sensors={sensors}\r\n            collisionDetection={closestCenter}\r\n            onDragEnd={handleDragEnd}\r\n            onDragStart={handleDragStart}\r\n        >\r\n            <SortableContext \r\n                items={tasks}\r\n                strategy={verticalListSortingStrategy}\r\n            >\r\n                {tasks.map((task) => (\r\n                    <SortableTask \r\n                        key={`task-${task.id}`} \r\n                        taskData={task} \r\n                        onEdit={putTask} \r\n                        onDelete={deleteTask} \r\n                        isDragged={activeId === task.id}\r\n                    />\r\n                ))}\r\n            </SortableContext>\r\n            <DragOverlay style={{background: \"inherit\"}}>{activeId ? <Task taskData={tasks.find(task => task.id === activeId)}/> : null}</DragOverlay>\r\n        </DndContext>\r\n      );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            ref={setNodeRef}\r\n            style={{...style}} \r\n        >\r\n            <div className={\"categoryWrapper\"}  style={{background: `var(--${colors.find(color => color.id === tasksCategorie.colorId).name})`}}>\r\n                <GrDrag className=\"dragHandle\" {...listeners} {...attributes} tabIndex=\"false\"></GrDrag>\r\n                <div className={\"editCategory-container\"} ref={categoryWrapper}>\r\n                    <HiColorSwatch \r\n                        className=\"colorPicker-btn\" \r\n                        onClick={() => setisColorPicker(true)} \r\n                        tabIndex=\"0\"\r\n                    />\r\n                    {isColorPicker && <ColorPicker tasksCategorie={tasksCategorie} onEdit={onEdit} onClose={setisColorPicker} wrapper={categoryWrapper.current} colors={colors} />}\r\n                    <FaTimes className=\"del-icon\" onClick={() => {onDelete(tasksCategorie.id); setIsEdit(false)}} />\r\n                </div>\r\n                {!isEdit ? (\r\n                    <h2 className=\"categoryTitle\" onClick={() => {setIsEdit(true); nameBackup.current = name}}>\r\n                        {tasksCategorie.name}\r\n                    </h2>\r\n                ) : drawCategoryEdit()}\r\n                <div className=\"tasks\" >{(tasks.length > 0) ? drawTasks() : <p>Tasks</p>}</div>\r\n                <div className=\"label\" onClick={() => setisLabelPicker(true)}>\r\n                    {isLabelPicker ? (\r\n                        <LabelPicker tasksCategorie={tasksCategorie} onEdit={onEdit} onClose={setisLabelPicker} labels={labels} />\r\n                    ) : (\r\n                        <><MdLabel className=\"label-btn\" /><span>{labelName()}</span></>\r\n                    )}\r\n                </div>\r\n                <ButtonAdd onAdd={addTask} text=\"Add Task\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksCategorie","import { useState } from 'react';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\nimport TasksCategorie from './TasksCategorie';\r\n\r\nimport {\r\n    DndContext, \r\n    closestCenter,\r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n} from '@dnd-kit/core';\r\n\r\nimport {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\n\r\n\r\nconst TaskCategoriesContainer = ({ data, filterState }) => {\r\n  const [tasksCategories, setTasksCategories] = useState(data.tasksCategories);\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n\r\n  async function addCategory() {\r\n    const newCategorie = {name: \"New\", colorId: 1, labelId: false};\r\n    if (filterState.type !== \"all\") {\r\n      newCategorie[filterState.type + \"Id\"] = filterState.value;\r\n    }\r\n\r\n    var res =  await fetch(`http://localhost:5000/tasksCategories`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      body: JSON.stringify(newCategorie),\r\n    });\r\n    var data = await res.json();\r\n\r\n    setTasksCategories([...tasksCategories, data]);\r\n  }\r\n\r\n  async function deleteCategory(id) {\r\n      var res = await fetch(`http://localhost:5000/tasksCategories/${id}`, {method: 'DELETE'});\r\n      if (res.status === 200) setTasksCategories(tasksCategories.filter(categorie => categorie.id !== id));\r\n  }\r\n\r\n  async function editCategory(editCategory) {\r\n    var res =  await fetch(`http://localhost:5000/tasksCategories/${editCategory.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n        body: JSON.stringify(editCategory),\r\n    });\r\n    var data = await res.json();\r\n    console.log(data);\r\n\r\n    setTasksCategories(tasksCategories.map(categorie => categorie.id === editCategory.id ? data : categorie));\r\n  }\r\n\r\n  function handleDragEnd(event) {\r\n    const {active, over} = event;\r\n\r\n    if (active.id !== over.id) {\r\n        const oldIndex = tasksCategories.findIndex(categorie => categorie.id === active.id);\r\n        const newIndex = tasksCategories.findIndex(categorie => categorie.id === over.id);\r\n        setTasksCategories(arrayMove(tasksCategories, oldIndex, newIndex));\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // Render\r\n\r\n  const FilteredCategories = () => {\r\n    var filteredArray;\r\n    if (filterState.type === \"all\") {\r\n      filteredArray = tasksCategories\r\n    } else {\r\n      filteredArray = tasksCategories.filter(categorie => categorie[filterState.type + \"Id\"] === filterState.value)\r\n    }\r\n\r\n    return (\r\n      filteredArray.map((tasksCategorie) => (\r\n        <TasksCategorie \r\n            key={`Categorie-${tasksCategorie.id}`} \r\n            tasksCategorie={tasksCategorie}\r\n            tasksData={data.tasks.filter((task) => task.tasksCategorieId === tasksCategorie.id)} \r\n            onDelete={deleteCategory}\r\n            onEdit={editCategory} \r\n            colors={data.colors}\r\n            labels={data.labels}\r\n        />\r\n      ))\r\n    )\r\n  }\r\n\r\n  function drawTasksCategories() {\r\n    return (\r\n    <>\r\n        <DndContext \r\n            sensors={sensors}\r\n            collisionDetection={closestCenter}\r\n            onDragEnd={handleDragEnd}\r\n        >\r\n            <SortableContext items={tasksCategories} ><FilteredCategories /></SortableContext>\r\n      </DndContext>\r\n    </>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"TaskCategoriesContainer\">\r\n        <div className=\"flexContainer\">\r\n            {tasksCategories.length > 0 ? drawTasksCategories() : \"No Categories added yet!\"}\r\n        </div>\r\n        <hr size=\"1\" width=\"90%\" color=\"black\"></hr>\r\n        <div id=\"addCategory\" onClick={addCategory}>\r\n            <IoAddCircleOutline />\r\n            <span>Add Category</span> \r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskCategoriesContainer;","import React from 'react'\r\n\r\nconst FilterType = ({type, children, setFilterState}) => {\r\n    function filterCategories(e) {\r\n        const value = e.target.dataset.id;\r\n        if (value === undefined) return;\r\n\r\n        setFilterState({type, value: parseInt(value)});\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h3 style={{background: \"black\", color: \"white\"}}>{(type + \"'s\").toUpperCase()}</h3>\r\n            <div onClick={(e) => filterCategories(e)}>\r\n                {children}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FilterType","import { useState } from 'react';\r\nimport { AiFillFilter } from 'react-icons/ai'\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport FilterType from './FilterType';\r\nimport ButtonAdd from './ButtonAdd';\r\n\r\nconst SideBar = ({data, ...props}) => {\r\n    const [labels, setLabels] = useState(data.labels);\r\n\r\n    async function addLabel(name) {\r\n        var res =  await fetch(`http://localhost:5000/labels`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n          body: JSON.stringify({name}),\r\n        });\r\n        var resData = await res.json();\r\n    \r\n        setLabels([...labels, resData]);\r\n    }\r\n\r\n    async function deleteLabel(id) {\r\n        var res = await fetch(`http://localhost:5000/labels/${id}`, {method: 'DELETE'});\r\n        if (res.status === 200) setLabels(labels.filter(label => label.id !== id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"sideBar\">\r\n            <div className=\"sideBar-header\">\r\n                <AiFillFilter />\r\n                <span>Filter</span>\r\n            </div>\r\n            <div className=\"filterOption\" style={{marginBottom: \"15px\"}} onClick={() => props.setFilterState({type: \"all\"})}>All</div>\r\n            <FilterType {...props} type=\"color\">\r\n                {data.colors && data.colors.map((color) => (\r\n                    <div \r\n                        className=\"filterOption\" \r\n                        style={{background: `var(--${color.name})`, color: \"black\"}} \r\n                        key={`filterOption-${color.id}`} \r\n                        data-id={color.id}\r\n                    >\r\n                        {color.name}\r\n                    </div>\r\n                ))}\r\n            </FilterType>\r\n            <FilterType {...props} type=\"label\">\r\n                {data.labels && data.labels.map(label => (\r\n                    <div className=\"filterOption\" key={`filterOption-${label.id}`} data-id={label.id}>\r\n                        {label.name}\r\n                        <FaTimes className=\"del-icon\" onClick={(e) => deleteLabel(parseInt(e.target.closest(\".filterOption\").dataset.id))} />\r\n                    </div>\r\n                ))}\r\n            </FilterType>\r\n            <ButtonAdd text=\"Add Label\" onAdd={addLabel}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar","import { useState, useEffect } from \"react\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\"\r\nimport TaskCategoriesContainer from \"./Components/TaskCategoriesContainer\";\r\nimport SideBar from \"./Components/SideBar\";\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({});\r\n    const [filterState, setFilterState] = useState({type: \"all\"})\r\n\r\n    useEffect(() => {\r\n        const getData = async() => {\r\n            const dataFromServer = await fetchData(); \r\n            setData(dataFromServer);\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n    async function fetchData() {\r\n        const res = await fetch(\"http://localhost:5000/db\");\r\n        const dbData = await res.json();\r\n        return dbData;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {Object.keys(data).length > 0 && <SideBar data={data} setFilterState={setFilterState} />}\r\n            <div style={{width: \"100%\", margin: \"0 160px\"}}>\r\n                <h1>Tasks Tracker</h1>\r\n                {Object.keys(data).length > 0 ? <TaskCategoriesContainer data={data} filterState={filterState} /> : <AiOutlineLoading3Quarters id=\"loading-icon\"/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ndocument.onload = () => alert(\"test\");"],"sourceRoot":""}