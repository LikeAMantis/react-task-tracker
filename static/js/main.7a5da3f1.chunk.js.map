{"version":3,"sources":["Components/Task.js","Components/SortableTask.js","Components/ButtonAdd.js","Components/ColorPicker.js","Components/LabelPicker.js","Components/TasksCategorie.js","Components/TaskCategoriesContainer.js","Components/FilterType.js","Components/SideBar.js","App.js","index.js"],"names":["Task","forwardRef","ref","taskData","onDelete","onEdit","attributes","listeners","style","useState","text","value","setValue","className","onClick","done","color","textDecorationLine","onChange","e","target","onBlur","onKeyDown","code","blur","handleKeyDown","stopPropagation","id","SortableTask","props","useSortable","setNodeRef","transform","transition","CSS","Transform","toString","isDragged","background","ButtonAdd","onAdd","isEdit","setIsEdit","input","focus","placeholder","ColorPicker","tasksCategorie","onClose","wrapper","colors","reactDom","createPortal","left","getBoundingClientRect","top","element","tabIndex","hasAttribute","parseInt","dataset","handleEdit","map","title","name","document","body","LabelPicker","labels","position","label","TasksCategorie","tasksData","tasks","setTasks","isColorPicker","setisColorPicker","isLabelPicker","setisLabelPicker","setName","nameBackup","useRef","categoryWrapper","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","Translate","a","postTask","tasksCategorieId","data","task","fetch","method","headers","JSON","stringify","res","json","putTask","x","deleteTask","status","filter","saveEdit","length","alert","cancelEdit","current","handleDragStart","event","active","handleDragEnd","over","oldIndex","findIndex","newIndex","arrayMove","find","height","width","collisionDetection","closestCenter","onDragEnd","onDragStart","items","strategy","verticalListSortingStrategy","drawLabel","TaskCategoriesContainer","filterState","tasksCategories","setTasksCategories","newCategorie","type","deleteCategory","categorie","editCategory","size","FilterType","children","setFilterState","undefined","filterCategories","SideBar","isExpanded","setIsExpanded","resData","setData","expanded","isActive","marginBottom","deleteLabel","closest","App","fetchData","dbData","useEffect","getData","dataFromServer","Object","keys","ReactDOM","render","StrictMode","getElementById","onload"],"mappings":"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","file":"static/js/main.7a5da3f1.chunk.js","sourcesContent":["import { forwardRef, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\"\r\nimport { GrDrag } from \"react-icons/gr\"\r\nimport { BsCheck } from \"react-icons/bs\"\r\n\r\n\r\nconst Task = forwardRef(({taskData, onDelete, onEdit, attributes, listeners, style}, ref) => {\r\n    const [value, setValue] = useState(taskData.text);\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.code === \"Enter\" || e.code === \"Escape\") {\r\n            e.target.blur();\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className=\"taskContainer\" ref={ref} style={style}>\r\n            <GrDrag className=\"dragHandle\" {...listeners} {...attributes}></GrDrag>\r\n            <div \r\n                className=\"checkbox\" \r\n                onClick={() => onEdit({...taskData, done: !taskData.done})} \r\n            >\r\n                { taskData.done && <BsCheck style={{color: \"red\"}}/>}\r\n            </div>\r\n            <input \r\n                className=\"task\" \r\n                style={taskData.done ? {textDecorationLine: 'line-through', color: \"grey\"} : null}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={() => onEdit({...taskData, text: value})}\r\n                onKeyDown={(e) => handleKeyDown(e)}\r\n            >\r\n            </input>\r\n            <FaTimes \r\n                className=\"del-icon\" \r\n                onClick={(e) => {e.stopPropagation(); onDelete(taskData.id)}}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Task","import React from 'react'\r\nimport Task from './Task';\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\nconst SortableTask = (props) => {\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: props.taskData.id});\r\n      \r\n      const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n\r\n    return (\r\n        <Task \r\n            ref={setNodeRef} \r\n            {...props} \r\n            style={props.isDragged ? {...style, background: \"lightgrey\"} : style} \r\n            attributes={attributes} \r\n            listeners={listeners}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SortableTask","import { useState } from \"react\";\r\nimport { TiPlus } from \"react-icons/ti\"\r\n\r\n\r\nconst ButtonAdd = ({ onAdd, text, style }) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    function onClick() {\r\n        onAdd(value);\r\n        setValue(\"\");\r\n        setIsEdit(false);\r\n    }\r\n\r\n    function drawEdit() {\r\n        return(\r\n            <div className=\"edit\">\r\n                <input \r\n                    ref={input => input && input.focus()} \r\n                    onKeyDown={(e) => handleKeyDown(e)} \r\n                    onChange={(e) => {setValue(e.target.value)}} \r\n                    value={value}\r\n                    placeholder={text}\r\n                ></input>\r\n                <div>\r\n                    <button className=\"save-btn\" onClick={onClick}>Save</button>\r\n                    <button onClick={() => setIsEdit(false)}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function drawButton() {\r\n        return ( \r\n            <div className=\"add-btn\" style={style} >\r\n                <span onClick={() => setIsEdit(true)}><TiPlus />{text}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.code===\"Enter\") {\r\n            onClick();\r\n            setIsEdit(false);\r\n        }\r\n        else if (e.code===\"Escape\") {\r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>{!isEdit ? drawButton() : drawEdit() }</>\r\n    )\r\n}\r\n\r\nexport default ButtonAdd","import React from 'react'\r\nimport reactDom from 'react-dom';\r\n\r\nconst ColorPicker = ({tasksCategorie, onEdit, onClose, wrapper, colors}) => {\r\n    function handleEdit(e) {\r\n        e.stopPropagation();\r\n        if (!e.target.hasAttribute(\"title\")) return;\r\n        \r\n        onEdit({...tasksCategorie, color: parseInt(e.target.dataset.id)});\r\n        onClose(false);\r\n    }\r\n\r\n    return reactDom.createPortal((\r\n        <div className=\"colorPicker\" \r\n            style={{left: (wrapper.getBoundingClientRect().left + \"px\"), top: wrapper.getBoundingClientRect().top + 20 + \"px\"}}\r\n            ref={element => element && element.focus()} \r\n            tabIndex=\"0\" \r\n            onClick={(e) => handleEdit(e)}\r\n            onBlur={() => onClose(false)}\r\n        >\r\n            {colors.map(color => (\r\n                <div key={`color-${color.id}`} title={color.name} data-id={color.id} style={{background: `var(--${color.name})`}}></div>\r\n            ))}\r\n        </div>\r\n    ), document.body)\r\n}\r\n\r\nexport default ColorPicker","import React from 'react'\r\n\r\nconst LabelPicker = ({labels, onClose, onEdit, tasksCategorie}) => {\r\n    function handleEdit(e) {\r\n        e.stopPropagation();\r\n        var label = e.target.dataset.id;\r\n        if (label == null) label = false;\r\n        else label = parseInt(e.target.dataset.id);\r\n        onEdit({...tasksCategorie, label});\r\n        onClose(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"labelPicker\" \r\n            style={{position: \"relative\", background: \"black\"}}\r\n            ref={element => element && element.focus()} \r\n            tabIndex=\"0\" \r\n            onClick={(e) => handleEdit(e)}\r\n            onBlur={() => onClose(false)}\r\n        >\r\n            <div>none</div>\r\n            {labels.map(label => (\r\n                <div key={`label-${label.id}`} data-id={label.id}>{label.name}</div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LabelPicker","import { useState, useRef, useEffect } from 'react';\r\nimport { GrDrag } from \"react-icons/gr\";\r\nimport { HiColorSwatch } from  \"react-icons/hi\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { MdLabel } from \"react-icons/md\";\r\nimport SortableTask from './SortableTask';\r\n\r\nimport ButtonAdd from './ButtonAdd';\r\nimport Task from './Task';\r\nimport ColorPicker from './ColorPicker';\r\nimport LabelPicker from './LabelPicker';\r\n\r\n\r\n// Sortable\r\nimport {\r\n    DragOverlay,\r\n    closestCenter,\r\n    DndContext, \r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n  } from '@dnd-kit/core';\r\n  import {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n    verticalListSortingStrategy,\r\n    useSortable\r\n  } from '@dnd-kit/sortable';\r\n  import { CSS } from '@dnd-kit/utilities';\r\n\r\n  \r\nconst TasksCategorie = ({tasksCategorie, tasksData, onDelete, onEdit, colors, labels}) => {\r\n    const [tasks, setTasks] = useState(tasksData);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isColorPicker, setisColorPicker] = useState(false);\r\n    const [isLabelPicker, setisLabelPicker] = useState(false);\r\n    const [name, setName] = useState(tasksCategorie.name);\r\n    const nameBackup = useRef();\r\n    const categoryWrapper = useRef();\r\n\r\n    const [activeId, setActiveId] = useState(null);\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n          coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n      );\r\n\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: tasksCategorie.id});\r\n      \r\n    const style = {\r\n        transform: CSS.Translate.toString(transform),\r\n        transition,\r\n    };\r\n\r\n    async function addTask(text) {\r\n        var data = await postTask({tasksCategorieId: tasksCategorie.id, done: false, text});\r\n        setTasks([...tasks, data]);\r\n    }\r\n\r\n    async function postTask(task) {\r\n        var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(\r\n                task\r\n            ),\r\n        });\r\n        var data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    async function putTask(task) {\r\n        var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks/${task.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n            body: JSON.stringify(task),\r\n        });\r\n        var data = await res.json();\r\n    \r\n        setTasks(tasks.map(x => x.id === task.id ? data : x));\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        var res = await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks/${id}`, {method: 'DELETE'});\r\n        if (res.status === 200) setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n\r\n\r\n    // Edit\r\n    function drawCategoryEdit() {\r\n        return(\r\n            <div>\r\n                <input \r\n                    ref={input => input && input.focus()} \r\n                    placeholder=\"New Category\" \r\n                    onKeyDown={e => handleKeyDown(e)} \r\n                    onChange={(e) => setName(e.target.value)} \r\n                    value={name} \r\n                    style={{height: \"1.5em\", width: \"96%\"}}\r\n                />\r\n                <div className=\"btnContainer\">\r\n                    <button \r\n                        className=\"save-btn\"\r\n                        onClick={saveEdit}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button onClick={cancelEdit}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.code===\"Enter\") {\r\n            onEdit({...tasksCategorie, name}); \r\n            setIsEdit(false);\r\n        }\r\n        else if (e.code===\"Escape\") {\r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    function saveEdit() {\r\n        if (name.length === 0) {\r\n            alert(\"Enter a Name!\");\r\n        } else {\r\n            onEdit({...tasksCategorie, name}); \r\n            setIsEdit(false);\r\n        }\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (name.length === 0) {\r\n            alert(\"Enter a Name!\");\r\n        } else {\r\n            setIsEdit(false);\r\n            setName(nameBackup.current);\r\n        }\r\n    }\r\n\r\n    function drawLabel() {\r\n        const label = labels.find(label => label.id === tasksCategorie.label);\r\n        if (label != null) {\r\n            return <span>{label.name}</span>;\r\n        } else {\r\n            return <MdLabel className=\"label-btn\" />;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n    // Sortable\r\n\r\n    function handleDragStart(event) {            \r\n        setActiveId(event.active.id);  \r\n    }\r\n\r\n    function handleDragEnd(event) {\r\n        const {active, over} = event;\r\n    \r\n        if (active.id !== over.id) {\r\n            const oldIndex = tasks.findIndex(x => x.id === active.id);\r\n            const newIndex = tasks.findIndex(x => x.id === over.id);\r\n            setTasks(arrayMove(tasks, oldIndex, newIndex));\r\n        }\r\n        setActiveId(null);\r\n    }\r\n\r\n    const drawTasks = () => {\r\n        return  (\r\n        <DndContext \r\n            sensors={sensors}\r\n            collisionDetection={closestCenter}\r\n            onDragEnd={handleDragEnd}\r\n            onDragStart={handleDragStart}\r\n        >\r\n            <SortableContext \r\n                items={tasks}\r\n                strategy={verticalListSortingStrategy}\r\n            >\r\n                {tasks.map((task) => (\r\n                    <SortableTask \r\n                        key={`task-${task.id}`} \r\n                        taskData={task} \r\n                        onEdit={putTask} \r\n                        onDelete={deleteTask} \r\n                        isDragged={activeId === task.id}\r\n                    />\r\n                ))}\r\n            </SortableContext>\r\n            <DragOverlay style={{background: \"inherit\"}}>{activeId ? <Task taskData={tasks.find(task => task.id === activeId)}/> : null}</DragOverlay>\r\n        </DndContext>\r\n      );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            ref={setNodeRef}\r\n            style={{...style}} \r\n        >\r\n            <div className={\"categoryWrapper\"}  style={{background: `var(--${colors.find(color => color.id === tasksCategorie.color).name})`}}>\r\n                <GrDrag className=\"dragHandle\" {...listeners} {...attributes} tabIndex=\"false\"></GrDrag>\r\n                <div className={\"editCategory-container\"} ref={categoryWrapper}>\r\n                    <HiColorSwatch \r\n                        className=\"colorPicker-btn\" \r\n                        onClick={() => setisColorPicker(true)} \r\n                        tabIndex=\"0\"\r\n                    />\r\n                    {isColorPicker && <ColorPicker tasksCategorie={tasksCategorie} onEdit={onEdit} onClose={setisColorPicker} wrapper={categoryWrapper.current} colors={colors} />}\r\n                    <FaTimes className=\"del-icon\" onClick={() => {onDelete(tasksCategorie.id); setIsEdit(false)}} />\r\n                </div>\r\n                {!isEdit ? (\r\n                    <h2 className=\"categoryTitle\" onClick={() => {setIsEdit(true); nameBackup.current = name}}>\r\n                        {tasksCategorie.name}\r\n                    </h2>\r\n                ) : drawCategoryEdit()}\r\n                <div className=\"tasks\" >{(tasks.length > 0) ? drawTasks() : <p>Tasks</p>}</div>\r\n                <div className=\"label\" onClick={() => setisLabelPicker(true)}>\r\n                    {isLabelPicker ? (\r\n                        <LabelPicker tasksCategorie={tasksCategorie} onEdit={onEdit} onClose={setisLabelPicker} labels={labels} />\r\n                    ) : (\r\n                        drawLabel()\r\n                    )}\r\n                </div>\r\n                <ButtonAdd onAdd={addTask} text=\"Add Task\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksCategorie","import { useState } from 'react';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\nimport TasksCategorie from './TasksCategorie';\r\n\r\nimport {\r\n    DndContext, \r\n    closestCenter,\r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n} from '@dnd-kit/core';\r\n\r\nimport {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\n\r\n\r\nconst TaskCategoriesContainer = ({ data, filterState }) => {\r\n  const [tasksCategories, setTasksCategories] = useState(data.tasksCategories);\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n\r\n  async function addCategory() {\r\n    const newCategorie = {name: \"New\", color: 1, label: false};\r\n    if (filterState.type !== \"all\") {\r\n      newCategorie[filterState.type] = filterState.value;\r\n    }\r\n\r\n    var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      body: JSON.stringify(newCategorie),\r\n    });\r\n    var data = await res.json();\r\n\r\n    setTasksCategories([...tasksCategories, data]);\r\n  }\r\n\r\n  async function deleteCategory(id) {\r\n      var res = await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories/${id}`, {method: 'DELETE'});\r\n      if (res.status === 200) setTasksCategories(tasksCategories.filter(categorie => categorie.id !== id));\r\n  }\r\n\r\n  async function editCategory(editCategory) {\r\n    var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories/${editCategory.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n        body: JSON.stringify(editCategory),\r\n    });\r\n    var data = await res.json();\r\n\r\n    setTasksCategories(tasksCategories.map(categorie => categorie.id === editCategory.id ? data : categorie));\r\n  }\r\n\r\n  function handleDragEnd(event) {\r\n    const {active, over} = event;\r\n\r\n    if (active.id !== over.id) {\r\n        const oldIndex = tasksCategories.findIndex(categorie => categorie.id === active.id);\r\n        const newIndex = tasksCategories.findIndex(categorie => categorie.id === over.id);\r\n        setTasksCategories(arrayMove(tasksCategories, oldIndex, newIndex));\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // Render\r\n\r\n  function drawTasksCategories() {\r\n    return (\r\n    <>\r\n        <DndContext \r\n            sensors={sensors}\r\n            collisionDetection={closestCenter}\r\n            onDragEnd={handleDragEnd}\r\n        >\r\n          <SortableContext items={tasksCategories} >\r\n            {tasksCategories.filter(categorie => categorie[filterState.type] === filterState.value).map((tasksCategorie) => (\r\n              <TasksCategorie \r\n                  key={`Categorie-${tasksCategorie.id}`} \r\n                  tasksCategorie={tasksCategorie}\r\n                  tasksData={data.tasks.filter((task) => task.tasksCategorieId === tasksCategorie.id)} \r\n                  onDelete={deleteCategory}\r\n                  onEdit={editCategory} \r\n                  colors={data.colors}\r\n                  labels={data.labels}\r\n              />))}\r\n          </SortableContext>\r\n      </DndContext>\r\n    </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"TaskCategoriesContainer\">\r\n        <div className=\"flexContainer\">\r\n            {tasksCategories.length > 0 ? drawTasksCategories() : \"No Categories added yet!\"}\r\n        </div>\r\n        <hr size=\"1\" width=\"90%\" color=\"black\"></hr>\r\n        <div id=\"addCategory\" onClick={addCategory}>\r\n            <IoAddCircleOutline />\r\n            <span>Add Category</span> \r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskCategoriesContainer;","import React from 'react'\r\n\r\nconst FilterType = ({type, children, setFilterState}) => {\r\n    function filterCategories(e) {\r\n        const value = e.target.dataset.id;\r\n        if (value === undefined) return;\r\n\r\n        setFilterState({type, value: parseInt(value)});\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h3 style={{background: \"black\", color: \"white\"}}>{(type + \"'s\")}</h3>\r\n            <div onClick={(e) => filterCategories(e)}>\r\n                {children}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FilterType","import { useState } from 'react';\r\nimport { AiFillFilter } from 'react-icons/ai'\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { MdLabel } from \"react-icons/md\";\r\nimport FilterType from './FilterType';\r\nimport ButtonAdd from './ButtonAdd';\r\n\r\nconst SideBar = ({data, ...props}) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    async function addLabel(name) {\r\n        var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/labels`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n          body: JSON.stringify({name}),\r\n        });\r\n        var resData = await res.json();\r\n    \r\n        props.setData({...data, labels: [...data.labels, resData]});\r\n    }\r\n\r\n    async function deleteLabel(id) {\r\n        var res = await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/labels/${id}`, {method: 'DELETE'});\r\n        if (res.status === 200) props.setData({...data, labels: data.labels.filter(label => label.id !== id)});\r\n    }\r\n\r\n    return (\r\n        <div className=\"sideBar\" expanded={isExpanded && \"\"}>\r\n            <div className=\"sideBar-header\" onClick={() => setIsExpanded(!isExpanded)}>\r\n                <AiFillFilter />\r\n                <span>Filter</span>\r\n            </div>\r\n            <div className=\"filterOption-wrapper\" isActive={props.filterState.type === \"all\" && \"\"}>\r\n                <div className=\"filterOption\" style={{marginBottom: \"15px\"}} onClick={() => props.setFilterState({type: \"all\"})}>All</div>\r\n            </div>\r\n            <FilterType {...props} type=\"color\">\r\n                {data.colors && data.colors.map((color) => (\r\n                    <div className=\"filterOption-wrapper\" isActive={props.filterState.type === \"color\" &&  props.filterState.value === color.id && \"\"}>\r\n                        <div \r\n                            className=\"filterOption\" \r\n                            style={{background: `var(--${color.name})`, color: \"black\"}} \r\n                            key={`filterOption-${color.id}`} \r\n                            data-id={color.id}\r\n                        >\r\n                            {color.name}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </FilterType>\r\n            <FilterType {...props} type=\"label\">\r\n                {data.labels && data.labels.map(label => (\r\n                    <div className=\"filterOption-wrapper\" isActive={(props.filterState.type === \"label\" &&  props.filterState.value === label.id) && \"\"}>\r\n                        <div \r\n                            className=\"filterOption\" \r\n                            // isActive={props.filterState.type === \"label\" &&  props.filterState.value === label.id && \"\"}\r\n                            key={`filterOption-${label.id}`} \r\n                            data-id={label.id} \r\n                        >\r\n                            {label.name}\r\n                            <FaTimes className=\"del-icon\" onClick={(e) => deleteLabel(parseInt(e.target.closest(\".filterOption\").dataset.id))} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </FilterType>\r\n            <ButtonAdd text=\"Add Label\" onAdd={addLabel}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst activeElement = {background: \"blue\"};\r\n\r\nexport default SideBar","import { useState, useEffect } from \"react\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\"\r\nimport TaskCategoriesContainer from \"./Components/TaskCategoriesContainer\";\r\nimport SideBar from \"./Components/SideBar\";\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({});\r\n    const [filterState, setFilterState] = useState({type: \"all\"})\r\n\r\n    useEffect(() => {\r\n        const getData = async() => {\r\n            const dataFromServer = await fetchData(); \r\n            setData(dataFromServer);\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n    async function fetchData() {\r\n        const res = await fetch(\"http://localhost:5000/db\");\r\n        const dbData = await res.json();\r\n        return dbData;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {Object.keys(data).length > 0 && <SideBar data={data} setData={setData} setFilterState={setFilterState} filterState={filterState} />}\r\n            <div style={{width: \"100%\"}}>\r\n                <h1>Tasks Tracker</h1>\r\n                {Object.keys(data).length > 0 ? <TaskCategoriesContainer data={data} filterState={filterState} /> : <AiOutlineLoading3Quarters id=\"loading-icon\"/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ndocument.onload = () => alert(\"test\");"],"sourceRoot":""}