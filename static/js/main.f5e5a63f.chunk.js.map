{"version":3,"sources":["Components/AddTask.js","Components/Task.js","Components/SortableTask.js","Components/Tasks.js","App.js","index.js"],"names":["AddTask","addTask","useState","value","setValue","edit","setEdit","onClick","ref","input","focus","onKeyDown","e","code","onChange","target","placeholder","className","id","Task","forwardRef","taskData","deleteTask","putTask","attributes","listeners","style","text","done","textDecorationLine","color","onBlur","blur","stopPropagation","console","log","SortableTask","props","useSortable","setNodeRef","transform","transition","CSS","Transform","toString","isDragged","background","Tasks","tasksCategorie","deleteCategory","editCategoryName","categoryAdded","tasks","setTasks","name","setName","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","Translate","a","postTask","tasksCategorieId","data","task","fetch","method","headers","body","JSON","stringify","res","json","map","x","status","filter","useEffect","fetchTasks","handleDragStart","event","active","handleDragEnd","over","oldIndex","findIndex","newIndex","arrayMove","tabIndex","height","width","length","alert","collisionDetection","closestCenter","onDragEnd","onDragStart","items","strategy","verticalListSortingStrategy","find","App","tasksCategories","setTasksCategories","setCategoryAdded","categorie","newName","fetchtasksCategories","size","addCategory","ReactDOM","render","StrictMode","document","getElementById","onload"],"mappings":"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","file":"static/js/main.f5e5a63f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { TiPlus } from \"react-icons/ti\"\r\n\r\n\r\nconst AddTask = ({addTask}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    function onClick() {\r\n        addTask(value);\r\n        setValue(\"\");\r\n        setEdit(false);\r\n    }\r\n\r\n\r\n\r\n    \r\n    function drawEdit() {\r\n        return(\r\n            <div>\r\n                <input \r\n                    ref={input => input && input.focus()} \r\n                    onKeyDown={(e) => onKeyDown(e)} \r\n                    onChange={(e) => {setValue(e.target.value)}} \r\n                    value={value}\r\n                    placeholder=\"Add Task\"\r\n                ></input>\r\n                <div>\r\n                    <button className=\"save-btn\" onClick={onClick}>Save</button>\r\n                    <button onClick={() => setEdit(false)}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function drawAddTask() {\r\n        return <div id=\"addTask\" onClick={() => setEdit(true)}><TiPlus /><span>Add Task</span></div>\r\n    }\r\n\r\n    function onKeyDown(e) {\r\n        if (e.code===\"Enter\") {\r\n            onClick();\r\n            setEdit(false);\r\n        }\r\n        else if (e.code===\"Escape\") {\r\n            setEdit(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>{!edit ? drawAddTask() : drawEdit() }</>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { forwardRef, useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\"\r\nimport { GrDrag } from \"react-icons/gr\"\r\nimport { BsCheck } from \"react-icons/bs\"\r\n\r\n\r\nconst Task = forwardRef(({taskData, deleteTask, putTask, attributes, listeners, style}, ref) => {\r\n    const [value, setValue] = useState(taskData.text);\r\n\r\n    function onKeyDown(e) {\r\n        if (e.code === \"Enter\" || e.code === \"Escape\") {\r\n            e.target.blur();\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className=\"taskContainer\" ref={ref} style={style}>\r\n            <GrDrag className=\"dragHandle\" {...listeners} {...attributes}></GrDrag>\r\n            <div className=\"checkbox\" \r\n                onClick={() => putTask({...taskData, done: !taskData.done})} \r\n                >\r\n                { taskData.done && <BsCheck/>}\r\n            </div>\r\n            <input \r\n                className=\"task\" \r\n                style={taskData.done ? {textDecorationLine: 'line-through', color: \"grey\"} : null}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={() => putTask({...taskData, text: value})}\r\n                onKeyDown={(e) => onKeyDown(e)}\r\n                >\r\n            </input>\r\n            <FaTimes \r\n                className=\"del-icon\" \r\n                onClick={(e) => {e.stopPropagation(); deleteTask(taskData.id); console.log(\"deleteTask\");}}\r\n                />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Task","import React from 'react'\r\nimport Task from './Task';\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\nconst SortableTask = (props) => {\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: props.taskData.id});\r\n      \r\n      const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n\r\n    return (\r\n        <Task ref={setNodeRef} {...props} style={props.isDragged ? {...style, background: \"lightgrey\"} : style} attributes={attributes} listeners={listeners}/>\r\n    )\r\n}\r\n\r\nexport default SortableTask","import { useState, useEffect } from 'react';\r\nimport { GrDrag } from \"react-icons/gr\";\r\n\r\nimport React from 'react';\r\nimport Add from './AddTask';\r\nimport Task from './Task';\r\nimport SortableTask from './SortableTask';\r\n\r\n// Sortable\r\nimport {\r\n    DragOverlay,\r\n    closestCenter,\r\n    DndContext, \r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n  } from '@dnd-kit/core';\r\n  import {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n    verticalListSortingStrategy,\r\n    useSortable\r\n  } from '@dnd-kit/sortable';\r\n  import { CSS } from '@dnd-kit/utilities';\r\n\r\n  \r\n\r\nconst Tasks = ({tasksCategorie, deleteCategory, editCategoryName, categoryAdded}) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [edit, setEdit] = useState(categoryAdded);\r\n    const [name, setName] = useState(tasksCategorie.name);\r\n    \r\n    const [activeId, setActiveId] = useState(null);\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n          coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n      );\r\n\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: tasksCategorie.id});\r\n      \r\n    const style = {\r\n        transform: CSS.Translate.toString(transform),\r\n        transition,\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchTasks() {\r\n            var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks?tasksCategorieId=${tasksCategorie.id}`);\r\n            var data = await res.json();\r\n    \r\n            setTasks(data);\r\n        }\r\n        fetchTasks();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    async function addTask(text) {\r\n        var data = await postTask({tasksCategorieId: tasksCategorie.id, done: false, text});\r\n        setTasks([...tasks, data]);\r\n    }\r\n\r\n    async function postTask(task) {\r\n        var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(\r\n                task\r\n            ),\r\n        });\r\n        var data = await res.json();\r\n        console.log(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    async function putTask(task) {\r\n        var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks/${task.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n            body: JSON.stringify(task),\r\n        });\r\n        var data = await res.json();\r\n    \r\n        setTasks(tasks.map(x => x.id === task.id ? data : x));\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        var res = await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasks/${id}`, {method: 'DELETE'});\r\n        if (res.status===200) setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n\r\n\r\n\r\n    // Edit\r\n\r\n    function drawCategoryEdit() {\r\n        return(\r\n            <div>\r\n                <input ref={input => input && input.focus()} placeholder=\"New Category\" onKeyDown={e => onKeyDown(e)} onChange={(e) => setName(e.target.value)} value={name} style={{height: \"1.5em\", width: \"96%\"}}></input>\r\n                <div className=\"btnContainer\">\r\n                    <button \r\n                        className=\"save-btn\"\r\n                        onClick={() => {name.length === 0 ? alert(\"Enter a Name!\") : saveCategory()}}\r\n                        >Save\r\n                    </button>\r\n                    <button onClick={() => name.length === 0 ? alert(\"Enter a Name!\") : setEdit(false)}>Cancel</button>\r\n                    <button className=\"del-btn\" onClick={() => {deleteCategory(tasksCategorie.id); setEdit(false);}}>Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onKeyDown(e) {\r\n        if (e.code===\"Enter\") {\r\n            editCategoryName(tasksCategorie.id, name); \r\n            setEdit(false);\r\n        }\r\n        else if (e.code===\"Escape\") {\r\n            setEdit(false);\r\n        }\r\n    }\r\n\r\n    function saveCategory() {\r\n        editCategoryName(tasksCategorie.id, name); \r\n        setEdit(false);\r\n    }\r\n\r\n\r\n\r\n    \r\n    // Sortable\r\n\r\n    const drawTasks = () => {\r\n        return  (\r\n        <DndContext \r\n            sensors={sensors}\r\n            collisionDetection={closestCenter}\r\n            onDragEnd={handleDragEnd}\r\n            onDragStart={handleDragStart}\r\n            >\r\n            <SortableContext \r\n                items={tasks}\r\n                strategy={verticalListSortingStrategy}\r\n                >\r\n                {tasks.map((task) => <SortableTask key={`task-${task.id}`} taskData={task} putTask={putTask} deleteTask={deleteTask} postTask={postTask} isDragged={activeId === task.id}/>)}\r\n            </SortableContext>\r\n            <DragOverlay> {activeId ? <Task taskData={tasks.find(task => task.id === activeId)}/> : null} </DragOverlay>\r\n        </DndContext>\r\n      );\r\n    }\r\n\r\n    function handleDragStart(event) {            \r\n        setActiveId(event.active.id);  \r\n    }\r\n\r\n    function handleDragEnd(event) {\r\n        const {active, over} = event;\r\n    \r\n        if (active.id !== over.id) {\r\n            const oldIndex = tasks.findIndex(x => x.id === active.id);\r\n            const newIndex = tasks.findIndex(x => x.id === over.id);\r\n            setTasks(arrayMove(tasks, oldIndex, newIndex));\r\n        }\r\n        setActiveId(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"test\" style={{...style}} ref={setNodeRef}>\r\n            <div className=\"categoryWrapper\">\r\n                <GrDrag className=\"dragHandle\" {...listeners} {...attributes} tabIndex=\"false\"></GrDrag>\r\n                { !edit ? <h2 className=\"categoryTitle\" onClick={() => setEdit(true)}> {tasksCategorie.name}</h2> : drawCategoryEdit() }\r\n                <div className=\"tasks\" >{ (tasks.length > 0) ? drawTasks() : <p>Tasks</p> }</div>\r\n                <Add addTask={addTask}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks","import Tasks from './Components/Tasks';\r\nimport { useState, useEffect } from 'react';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\n\r\nimport {\r\n  DndContext, \r\n  closestCenter,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n} from '@dnd-kit/core';\r\n\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\n\r\n\r\nfunction App() {\r\n  const [tasksCategories, setTasksCategories] = useState([]);\r\n  const [categoryAdded, setCategoryAdded] = useState(false);\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchtasksCategories = async () => {\r\n      var res =  await fetch(\"https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories\");\r\n      var data = await res.json();\r\n\r\n      setTasksCategories(data);\r\n    }\r\n    fetchtasksCategories();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  async function addCategory() {\r\n    var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      body: JSON.stringify({name: \"\"}),\r\n    });\r\n    var data = await res.json();\r\n\r\n    setTasksCategories([...tasksCategories, data]);\r\n  }\r\n\r\n  async function deleteCategory(id) {\r\n      var res = await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories/${id}`, {method: 'DELETE'});\r\n      if (res.status === 200) setTasksCategories(tasksCategories.filter(categorie => categorie.id !== id));\r\n  }\r\n\r\n  \r\n  async function editCategoryName(id, newName) {\r\n    var res =  await fetch(`https://my-json-server.typicode.com/LikeAMantis/react-task-tracker/tasksCategories/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n        body: JSON.stringify({name: newName}),\r\n    });\r\n    var data = await res.json();\r\n\r\n    setTasksCategories(tasksCategories.map(categorie => categorie.id === id ? data : categorie));\r\n  }\r\n\r\n\r\n\r\n\r\n  // Sortable\r\n\r\n  function drawTasksCategories() {\r\n    return (\r\n      <>\r\n      <DndContext \r\n        sensors={sensors}\r\n        collisionDetection={closestCenter}\r\n        onDragEnd={handleDragEnd}\r\n        >\r\n        <SortableContext \r\n          items={tasksCategories}\r\n          > \r\n          { tasksCategories.map((tasksCategorie) => \r\n            <Tasks \r\n              key={`Categorie-${tasksCategorie.id}`} \r\n              tasksCategorie={tasksCategorie} \r\n              deleteCategory={deleteCategory} \r\n              editCategoryName={editCategoryName}\r\n              categoryAdded={categoryAdded}\r\n            />\r\n          )}\r\n        </SortableContext>\r\n      </DndContext>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function handleDragEnd(event) {\r\n    const {active, over} = event;\r\n\r\n    if (active.id !== over.id) {\r\n        const oldIndex = tasksCategories.findIndex(categorie => categorie.id === active.id);\r\n        const newIndex = tasksCategories.findIndex(categorie => categorie.id === over.id);\r\n        setTasksCategories(arrayMove(tasksCategories, oldIndex, newIndex));\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Tasks Tracker</h1>\r\n      <div className=\"flexContainer\">{tasksCategories.length > 0 ? drawTasksCategories() : \"No Categories added yet!\"}</div>\r\n      <hr size=\"1\" width=\"90%\" color=\"black\"></hr>\r\n      <div id=\"addCategory\" onClick={() => {addCategory(); setCategoryAdded(true)}} ><IoAddCircleOutline />Add Category</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\ndocument.onload = () => alert(\"test\");"],"sourceRoot":""}