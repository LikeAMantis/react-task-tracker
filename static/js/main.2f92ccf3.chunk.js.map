{"version":3,"sources":["Components/AddTask.js","Components/Task.js","Components/Tasks.js","App.js","index.js"],"names":["AddTask","addTask","useState","value","setValue","edit","setEdit","onClick","id","ref","input","focus","onKeyDown","e","code","onChange","target","placeholder","className","Task","taskData","toggleTask","deleteTask","useSortable","attributes","listeners","setNodeRef","transform","transition","style","CSS","Transform","toString","done","textDecorationLine","color","text","stopPropagation","console","log","Tasks","tasksCategorie","deleteCategory","editCategoryName","isLast","tasks","setTasks","name","setName","a","postTask","data","fetch","method","headers","body","JSON","stringify","tasksCategorieId","res","json","task","find","map","status","filter","useEffect","fetchTasks","width","height","padding","background","borderRadius","length","alert","items","strategy","verticalListSortingStrategy","fontSize","textAlign","App","tasksCategories","setTasksCategories","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","categorie","newName","fetchtasksCategories","collisionDetection","closestCenter","index","size","addCategory","ReactDOM","render","StrictMode","document","getElementById","onload"],"mappings":"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","file":"static/js/main.2f92ccf3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { IoAddCircleSharp } from \"react-icons/io5\"\r\n\r\n\r\nconst AddTask = ({addTask}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     if(edit) {\r\n    //         this.refs.taskInput.focus();\r\n    //     }\r\n    // }, [edit])\r\n\r\n    function onClick() {\r\n        addTask(value);\r\n        setValue(\"\");\r\n        setEdit(false);\r\n    }\r\n\r\n    function drawEdit() {\r\n        return(\r\n            <div>\r\n                <input \r\n                    ref={input => input && input.focus()} \r\n                    onKeyDown={(e) => e.code===\"Enter\" && onClick()} \r\n                    onChange={(e) => {setValue(e.target.value)}} \r\n                    value={value}\r\n                    placeholder=\"Add Task\"\r\n                ></input>\r\n                <div>\r\n                    <button className=\"save-btn\" onClick={onClick}>Save</button>\r\n                    <button onClick={() => setEdit(false)}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function drawAddTask() {\r\n        return <><IoAddCircleSharp /><span onClick={() => setEdit(true)}>Add Task</span></>\r\n    }\r\n\r\n    return (\r\n        <div id=\"addTask\">\r\n            {!edit ? drawAddTask() : drawEdit() }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { FaTimes } from \"react-icons/fa\"\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\nconst Task = ({taskData, toggleTask, deleteTask, id}) => {\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n    } = useSortable({id: id});\r\n      \r\n      const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n      \r\n    return (\r\n        <div className=\"taskContainer\" ref={setNodeRef} style={style} {...attributes} {...listeners}>\r\n            <div className=\"task\" onClick={() => toggleTask(taskData.id)} style={taskData.done ? {textDecorationLine: 'line-through', color: \"black\"} : {}}>{taskData.text}</div>\r\n            <FaTimes \r\n                className=\"del-icon\" \r\n                onClick={(e) => {e.stopPropagation(); deleteTask(taskData.id); console.log(\"deleteTask\");}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import { useState, useEffect } from 'react';\r\n\r\nimport React from 'react';\r\nimport Add from './AddTask';\r\nimport Task from './Task';\r\n\r\nimport {\r\n    DndContext, \r\n    closestCenter,\r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n} from '@dnd-kit/core';\r\n\r\nimport {\r\narrayMove,\r\nSortableContext,\r\nsortableKeyboardCoordinates,\r\nverticalListSortingStrategy,\r\n} from '@dnd-kit/sortable';\r\n  \r\n\r\n\r\nconst Tasks = ({tasksCategorie, deleteCategory, editCategoryName, isLast}) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [edit, setEdit] = useState(isLast);\r\n    const [name, setName] = useState(tasksCategorie.name);\r\n\r\n\r\n  \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchTasks() {\r\n            var res =  await fetch(`http://localhost:5000/tasks?tasksCategorieId=${tasksCategorie.id}`);\r\n            var data = await res.json();\r\n    \r\n            setTasks(data);\r\n        }\r\n        fetchTasks();\r\n    }, [])\r\n\r\n    async function addTask(text) {\r\n        var data = await postTask(text);\r\n        setTasks([...tasks, data]);\r\n    }\r\n\r\n    async function postTask(text) {\r\n        var res =  await fetch(`http://localhost:5000/tasks`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(\r\n                {tasksCategorieId: tasksCategorie.id, text, done: false}\r\n            ),\r\n        });\r\n        var data = await res.json();\r\n        console.log(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    \r\n    async function toggleTask(id) {\r\n        var task = tasks.find(task => task.id===id);\r\n        task.done = !task.done;\r\n\r\n        var res =  await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n            body: JSON.stringify(tasks.find(task => task.id === id)),\r\n        });\r\n        var data = await res.json();\r\n    \r\n        setTasks(tasks.map(task => task.id === id ? data : task));\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        var res = await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'});\r\n        if (res.status===200) setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n\r\n    // Sortable\r\n\r\n    function drawTasks() {\r\n        return  (\r\n            <SortableContext \r\n                items={tasks}\r\n                strategy={verticalListSortingStrategy}\r\n                // key={tasksCategorie.id} \r\n                // id={tasksCategorie.id}\r\n            >\r\n            {tasks.map((task) => <Task key={\"Task-\" + task.id} id={task.id} taskData={task} toggleTask={toggleTask} deleteTask={deleteTask}/>)}\r\n        </SortableContext>\r\n      );\r\n    }\r\n\r\n\r\n    // Edit\r\n\r\n    const onKeyDown = (e) => {\r\n        console.log(e);\r\n\r\n        if (e.code===\"Enter\") {\r\n            editCategoryName(tasksCategorie.id, name); \r\n            setEdit(false);\r\n        }\r\n        else if (e.code===\"Ecape\") {\r\n            setEdit(false);\r\n        }\r\n    }\r\n\r\n    function saveCategory() {\r\n        editCategoryName(tasksCategorie.id, name); \r\n        setEdit(false);\r\n    }\r\n\r\n    function drawCategoryEdit() {\r\n        return(\r\n            <div>\r\n                <input ref={input => input && input.focus()} placeholder=\"New Category\" onKeyDown={e => onKeyDown(e)} onChange={(e) => setName(e.target.value)} value={name} style={{height: \"1.5em\", width: \"100%\"}}></input>\r\n                <div className=\"btnContainer\">\r\n                    <button \r\n                        className=\"save-btn\"\r\n                        onClick={() => {name.length === 0 ? alert(\"Enter a Name!\") : saveCategory()}}\r\n                    >Save</button>\r\n                    <button onClick={() => name.length === 0 ? alert(\"Enter a Name!\") : setEdit(false)}>Cancel</button>\r\n                    <button className=\"del-btn\" onClick={() => {deleteCategory(tasksCategorie.id); setEdit(false);}}>Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"CategoryWrapper\" style={{width: \"250px\", height: \"fit-content\", padding: \"18px\", background: \"#edebeb\", borderRadius: \"9px\"}}>\r\n            { !edit ? <h2 className=\"CategoryTitle\" onClick={() => setEdit(true)}> {tasksCategorie.name}</h2> : drawCategoryEdit() }\r\n            <div className=\"Tasks\" >{ (tasks.length > 0) ? drawTasks() : <p style={{fontSize: \"12pt\", textAlign: \"center\", color: \"grey\"}}>Tasks</p> }</div>\r\n            <Add addTask={addTask}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks","import Tasks from './Components/Tasks';\nimport { useState, useEffect } from 'react';\nimport { IoAddCircleOutline } from 'react-icons/io5';\n\nimport {\n  DndContext, \n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\n\nimport {\narrayMove,\nSortableContext,\nsortableKeyboardCoordinates,\nverticalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\n\nfunction App() {\n  const [tasksCategories, setTasksCategories] = useState([]);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  useEffect(() => {\n    const fetchtasksCategories = async () => {\n      var res =  await fetch(\"http://localhost:5000/tasksCategories\");\n      var data = await res.json();\n\n      setTasksCategories(data);\n    }\n    fetchtasksCategories();\n  }, []);\n\n\n\n\n  async function addCategory() {\n    var res =  await fetch(`http://localhost:5000/tasksCategories`, {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n        },\n      body: JSON.stringify({name: \"\"}),\n    });\n    var data = await res.json();\n\n    setTasksCategories([...tasksCategories, data]);\n  }\n\n  async function deleteCategory(id) {\n      var res = await fetch(`http://localhost:5000/tasksCategories/${id}`, {method: 'DELETE'});\n      if (res.status === 200) setTasksCategories(tasksCategories.filter(categorie => categorie.id !== id));\n  }\n  \n\n  // function handleDragEnd(event) {\n  //   const {active, over} = event;\n    \n  //   if (active.id !== over.id) {\n  //     setTasks((items) => {\n  //       const oldIndex = items.indexOf(active.id);\n  //       const newIndex = items.indexOf(over.id);\n        \n  //       return arrayMove(items, oldIndex, newIndex);\n  //     });\n  //   }\n  // }\n\n  function drawTasksCategories() {\n    return (\n      <DndContext \n        sensors={sensors}\n        collisionDetection={closestCenter}\n        // onDragEnd={handleDragEnd}\n      >\n      { tasksCategories.map((tasksCategorie, index) => \n        <Tasks \n          key={`taskContainer-${index}`} \n          tasksCategorie={tasksCategorie} \n          deleteCategory={deleteCategory} \n          editCategoryName={editCategoryName}\n          isLast={(index + 1) === tasksCategories.length}\n        />\n      )}\n      </DndContext>\n    )\n  }\n\n  async function editCategoryName(id, newName) {\n    var res =  await fetch(`http://localhost:5000/tasksCategories/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n            },\n        body: JSON.stringify({name: newName}),\n    });\n    var data = await res.json();\n\n    setTasksCategories(tasksCategories.map(categorie => categorie.id === id ? data : categorie));\n}\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Tasks Tracker</h1>\n      <div className=\"flexContainer\">{tasksCategories.length > 0 ? drawTasksCategories() : \"No Categories added yet!\"}</div>\n      <hr size=\"1\" width=\"90%\" color=\"black\"></hr>\n      <div id=\"addCategory\" onClick={() => addCategory()} ><IoAddCircleOutline />Add Category</div>\n    </div>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ndocument.onload = () => alert(\"test\");"],"sourceRoot":""}