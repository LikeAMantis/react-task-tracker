
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300&display=swap');
@keyframes rotation {
  0%   {transform: translate(-50%, -50%) rotate(0deg)}
  100% {transform: translate(-50%, -50%) rotate(360deg)}
}

:root {
  --grey: rgb(243, 243, 243);
  --blue: #8ac7f9;
  --red: #ff6060;
  --orange: #fdc45a;
  --purple: #cfa7cf;
  --teal: #93bfbf;
  --green: #92bf85;
}

h1, h2 {
  font-family: 'Inter', helvetica;
}

h1 {
  text-align: center;
}

hr {
  margin-top: 30px;
}

body {
  font-family: helvetica, sans-serif;
}

input, textarea {
  background: #ffffff00;
  outline: none;
  border: none;
  resize: none;
}

button {
  background-color: #ffffff30;
  color: black;
  padding: 1px 17px;
  margin-right: 5px;
  border-radius: 5px;
  margin-bottom: 5px;
}


/* Color Picker */
.editCategory-container {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 12pt;
}

.editCategory-container > svg {
  display: inline-block;
  margin-left: 4px;
  outline: none;
}

.colorPicker {
  position: absolute;
  left: 50%;
  background: white;
  border-radius: 4px;
  z-index: 1;
  white-space: nowrap;
  padding: 2px 5px;
}

.colorPicker > div {
  display: inline-block;
  height: 30px; 
  width: 30px; 
  cursor: pointer; 
  outline: none; 
  border-radius: 4px; 
  margin: 5px 2px;
}



.app  {
  position: relative;
}

#loading-icon {
  position: absolute;
  left: 50%;
  top: 50%;
  font-size: 40pt;
  animation: rotation 1.4s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.taskContainer svg {
  font-size: 10pt;
}

.editCategory-container > svg:hover {
  cursor: pointer;
  color: gray;
}

button:focus {
  border: white solid 2px;
}

.btnContainer {
  position: relative;
}

.save-btn {
  color: green;
}

button:hover {
  filter: brightness(1.2);
}



.flexContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding-top: 25px;
  gap: 20px;
}

.categoryWrapper {
  position: relative;
  padding: 20px;
  padding-top: 30px;
  padding-left: 30px;
  background: var(--grey);
  border-radius: 9px;
  height: fit-content;
  transition: background 350ms ease-out;
}

.categoryWrapper .dragHandle {
  display: block;
  left: 10px;
  top: 10px;
}

.task {
  display: inline-block;
  color: black;
  padding: 8px 0px;
  font-size: 10pt;
  margin-top: 0;
  width: 230px;
  margin-left: 45px;
  border: 0;
  cursor: default;
}

.task:focus-visible {
  outline: 0;
}

.taskContainer {
  position: relative;
  background: inherit;
}

.dragHandle {
  display: none;
  position: absolute;
  cursor: grab;
  outline: none;
}

.taskContainer > .dragHandle {
  left: 5px;
  top: 50%;
  transform: translateY(-50%);
}





#addCategory {
  text-align: center;
  font-size: 18pt;
}

#addTask {
  font-size: 12pt;
}

#addTask svg {
  font-size: 1.2em;
}

#addCategory svg, #addTask svg {
  vertical-align: text-top;
  margin-right: 5px;
}

#addCategory:hover, 
#addTask:hover {
  color: green;
  cursor: pointer;
}


.checkbox {
  display: inline-block;
  position: absolute;
  width: 0.6em;
  height: 0.6em;
  border: 3px solid black;
  border-radius: 5px;
  top: 50%;
  left: 23px;
  transform: translateY(-50%);
  cursor: pointer;
}

.checkbox svg {
  position: absolute;
  font-size: 11pt;
  stroke-width: 2px;
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
}

.tasks {
  border-top: 1px solid black;
  cursor: default;
  padding: 5px 0 15px 0;
  background: inherit;
}

.tasks p {
 text-align: center;
 color: grey;
 width: 256px;
 margin: 0;
 font-size: 10pt;
 padding: 7px 0;
}

.tasks .taskContainer:hover {
  filter: brightness(1.2);
}

.taskContainer .del-icon {
  display: none;
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  color: black;
  cursor: pointer;
}

svg.del-icon:hover {
  color: red;
}

.categoryTitle {
  padding: 3px;
  margin: 0;
}

.categoryTitle:hover {
  background: #ffffff38;
  border-radius: 10px;
}


.categoryTitle:hover .category-del-icon {
  display: inline;
  margin-left: 7px;
  width: 13px;
  color: red;
  vertical-align: text-top;
}


.taskContainer:hover > .del-icon, 
.taskContainer:hover > .dragHandle {
  display: block;
}